plugins {
    id 'com.android.application'
}

android {


    compileSdk 32

    defaultConfig {
        applicationId "com.hfad.thinder"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // Allows binding of UI components to data sources, also see: https://developer.android.com/topic/libraries/data-binding#java
    buildFeatures {
        dataBinding true
    }

}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    configurations.implementation.setCanBeResolved(true)
    failOnError false
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) +
            configurations.implementation
    android.applicationVariants.all { variant ->
        if (variant.name == 'release') {
            dependsOn "dataBindingGenBaseClassesRelease"
            owner.classpath += variant.javaCompileProvider.get().classpath +
                    files("$buildDir/generated/data_binding_base_class_source_out/${variant.name}/out")
        }
        else if (variant.name == 'debug') {
            dependsOn "dataBindingGenBaseClassesDebug"
            owner.classpath += variant.javaCompileProvider.get().classpath +
                    files("$buildDir/generated/data_binding_base_class_source_out/${variant.name}/out")
        }
    }
    destinationDir = file("${project.buildDir}/outputs/javadoc/")
    exclude '**/R.java', '**/R.*.java', '**/*Binding.java', '**/*Binding.*.java'
}

dependencies {

    implementation 'com.google.android.material:material:1.6.1'
    // enables use of toolbars
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.5.1'
    implementation 'androidx.navigation:navigation-ui:2.5.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    // enables pull to refresh recyclerview
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.google.android.gms:play-services-basement:17.6.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    androidTestImplementation project(path: ':app')
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    // library to display various charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    testImplementation 'junit:junit:4.13.2'
    // The REST Assured dependencies are used to test the api calls in the model (tests are run on a local postgres server with port:5432)
    testImplementation 'org.json:json:20220320'
    testImplementation 'io.rest-assured:rest-assured:5.1.1'
    testImplementation 'io.rest-assured:json-schema-validator:5.1.1'
    testImplementation 'io.rest-assured:xml-path:5.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // okhttp Api Library for HTTP Requests to the backend (GET,POST,PUT,DELETE)
    // and GSON converter (for universal naming through the SerializedName() function)
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'


    testImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.10'
    implementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.10'


    // Optional -- Robolectric environment
    testImplementation "androidx.test:core:1.4.0"
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:4.3.1"
    // Optional -- mockito-kotlin
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    // Optional -- Mockk framework
    testImplementation "io.mockk:mockk:1.4.1"
    // Optional -- for InstantTaskExecutorRule
    testImplementation 'android.arch.core:core-testing:1.0.0-alpha3'
    // Optional -- for Mocking of final classes
    testImplementation 'org.mockito:mockito-inline:2.13.0'

}
